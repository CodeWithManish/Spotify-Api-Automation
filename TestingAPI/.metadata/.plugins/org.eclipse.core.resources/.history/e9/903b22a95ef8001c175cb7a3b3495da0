package com.bridgelabz.spotify;

import org.testng.Assert;
import org.testng.annotations.BeforeTest;
import org.testng.annotations.Test;

import io.restassured.RestAssured;
import io.restassured.http.ContentType;
import io.restassured.response.Response;

public class SpotifyApi {

	public String token;
	String userId;
	String playListId ="0Mc8aBONKnjtK2UGPgTtOJ";

	@BeforeTest
	public void getToken() {
		token = "Bearer BQC7p_36hHQqaSv0ivU6xRcOanmKv4TVKWd3sqDG3t91kEKFcu5JblKkVTHQp3mfCVi6slWtAAK8ni5RelH5egGTybQQ-JP3MhQHjkXkCPb31BWF2wlyXVzmp2Dx20hlumbv14S6rtA922cF09BpHrxRPHJkgoduf--8A1xQwxmTr21Vxw38PJ1_h0Oan1kUeObQtMly-yN-L4FN3nE_oMV1bEfsastXETXuw-L8u9Tvo7bpzx8dGa12j6zWeOUooXlkVYUnrcFwg659DBkXvDfKpGvwsW-v0WXyOyBQVROr8K-y_GBZWuDCBdqoM7nEfRCizAfboA5N";

	}

	@Test(priority = 0)
	public void test_GetCurrentUsersProfile() {
		Response response = RestAssured.given().contentType(ContentType.JSON).accept(ContentType.JSON)
				.header("Authorization", token).when().get("https://api.spotify.com/v1/me");
		response.prettyPrint();
		userId = response.path("id");
		System.out.println("User Id is : " + userId);
//		int statusCode = response.getStatusCode();
//		System.out.println("Status code: " + statusCode);
//		Assert.assertEquals(statusCode, 200);
		Assert.assertEquals(userId,"31sqekzq7bsp3wvqxkugx5uahdwe");
	}

	// Get User's Profile
	@Test(priority = 1)
	public void test_GetUsersProfile() {
		Response response = RestAssured.given().contentType(ContentType.JSON).accept(ContentType.JSON)
				.header("Authorization", token).when().get("https://api.spotify.com/v1/users/" + userId + "");
		response.prettyPrint();
		int statusCode = response.getStatusCode();
		System.out.println("Status code: " + statusCode);
		Assert.assertEquals(statusCode, 200);
	}

	// Create Playlist
	@Test(priority = 2)
	public void test_CreatePlaylist_ShouldStatusCode() {
		Response response = RestAssured.given().contentType(ContentType.JSON).accept(ContentType.JSON)
				.header("Authorization", token)
				.body("{\r\n" + "  \"name\": \"Automation Playlist1\",\r\n"
						+ "  \"description\": \"New playlist description\",\r\n" + "  \"public\": false\r\n" + "}")
				.when().post("https://api.spotify.com/v1/users/" + userId + "/playlists");
		response.prettyPrint();
		playListId = response.path("id");
		System.out.println("Playlist Id is: " + playListId);
		response.then().assertThat().statusCode(201);

	}

	// Get Playlist
	@Test(priority = 3)
	public void test_GetPlaylist() {
		Response response = RestAssured.given().contentType(ContentType.JSON).accept(ContentType.JSON)
				.header("Authorization", token).when()
				.get("https://api.spotify.com/v1/playlists/0DjKqeyHYtEWFEoVjVf74L");
		response.prettyPrint();
		int statusCode = response.getStatusCode();
		System.out.println("Status code: " + statusCode);
		Assert.assertEquals(statusCode, 200);

	}

	// Get Current User's Playlists
	@Test(priority = 4)
	public void test_GetCurrentUserPlaylists() {
		Response response = RestAssured.given().contentType(ContentType.JSON).accept(ContentType.JSON)
				.header("Authorization", token).when().get("https://api.spotify.com/v1/me/playlists");
		response.prettyPrint();
		int statusCode = response.getStatusCode();
		System.out.println("Status code: " + statusCode);
		Assert.assertEquals(statusCode, 200);

	}

	// Get Playlist Cover Image
	@Test(priority = 5)
	public void test_GetPlaylistCoverImage() {
		Response response = RestAssured.given().contentType(ContentType.JSON).accept(ContentType.JSON)
				.header("Authorization", token).when()
				.get("https://api.spotify.com/v1/playlists/0DjKqeyHYtEWFEoVjVf74L/images");
		response.prettyPrint();
		int statusCode = response.getStatusCode();
		System.out.println("Status code: " + statusCode);
		Assert.assertEquals(statusCode, 200);

	}

	// Get Playlist Items
	@Test
	public void test_GetPlaylistItems() {
		Response response = RestAssured.given().contentType(ContentType.JSON).accept(ContentType.JSON)
				.header("Authorization", token).when()
				.get("https://api.spotify.com/v1/playlists/0DjKqeyHYtEWFEoVjVf74L/tracks");
		response.prettyPrint();
		int statusCode = response.getStatusCode();
		System.out.println("Status code: " + statusCode);
		Assert.assertEquals(statusCode, 200);

	}

	// Get User's Playlists
	@Test
	public void test_GetUsersPlaylists() {
		Response response = RestAssured.given().contentType(ContentType.JSON).accept(ContentType.JSON)
				.header("Authorization", token).when().get("https://api.spotify.com/v1/users/" + userId + "/playlists");
		response.prettyPrint();
		int statusCode = response.getStatusCode();
		System.out.println("Status code: " + statusCode);
		Assert.assertEquals(statusCode, 200);

	}

	// Search for Item
	@Test
	public void test_SearchForItem() {
		Response response = RestAssured.given().contentType(ContentType.JSON).accept(ContentType.JSON)
				.header("Authorization", token)
				.queryParam("q","jubin nautiyal")
				.queryParam("type", "track")
				.when()
				.get("https://api.spotify.com/v1/search");
		response.prettyPrint();
		int statusCode = response.getStatusCode();
		System.out.println("Status code: " + statusCode);  
		Assert.assertEquals(statusCode, 200);

	}

	// Add Items to Playlist
	@Test
	public void test_AddItemstoPlaylist() {
		Response response = RestAssured.given().contentType(ContentType.JSON).accept(ContentType.JSON)
				.header("Authorization", token)
				.queryParam("position", "1")
				.queryParam("uris", "spotify:track:2rU33n6Fhd6G1MzYhUj6C5")
				.when()
				.post("https://api.spotify.com/v1/playlists/0Mc8aBONKnjtK2UGPgTtOJ/tracks");
		response.prettyPrint();
		playListId = response.path("id");
		System.out.println("Playlist Id is: " + playListId);
		response.then().assertThat().statusCode(201);

	}
	
	// Track
	// Get Track's Audio Analysis
	@Test
	public void test_GetTracksAudioAnalysis() {
		Response response = RestAssured.given().contentType(ContentType.JSON).accept(ContentType.JSON)
				.header("Authorization", token).when()
				.get("https://api.spotify.com/v1/audio-analysis/0XMgDXVvDen04Rl0iB1YNr");
		response.prettyPrint();
		int statusCode = response.getStatusCode();
		System.out.println("Status code: " + statusCode);
		Assert.assertEquals(statusCode, 200);

	}

	// Get Tracks' Audio Features
	@Test
	public void test_GetTracksAudioFeatures() {
		Response response = RestAssured.given().contentType(ContentType.JSON).accept(ContentType.JSON)
				.header("Authorization", token).when().get("https://api.spotify.com/v1/audio-features");
		response.prettyPrint();
		int statusCode = response.getStatusCode();
		System.out.println("Status code: " + statusCode);
		Assert.assertEquals(statusCode, 200);

	}

	// Get Track's Audio Features
	@Test
	public void test_GetTracksAudioFeatures_ShouldtatusCode() {
		Response response = RestAssured.given().contentType(ContentType.JSON).accept(ContentType.JSON)
				.header("Authorization", token).when()
				.get("https://api.spotify.com/v1/audio-features/0XMgDXVvDen04Rl0iB1YNr");
		response.prettyPrint();
		int statusCode = response.getStatusCode();
		System.out.println("Status code: " + statusCode);
		Assert.assertEquals(statusCode, 200);

	}

	// Get Several Tracks
	@Test
	public void test_GetSeveralTracks() {
		Response response = RestAssured.given().contentType(ContentType.JSON).accept(ContentType.JSON)
				.header("Authorization", token).when()
				.get("https://api.spotify.com/v1/tracks?ids=0XMgDXVvDen04Rl0iB1YNr");
		response.prettyPrint();
		int statusCode = response.getStatusCode();
		System.out.println("Status code: " + statusCode);
		Assert.assertEquals(statusCode, 200);

	}

	// Get Track
	@Test
	public void test_GetTrack() {
		Response response = RestAssured.given().contentType(ContentType.JSON).accept(ContentType.JSON)
				.header("Authorization", token).when()
				.get("https://api.spotify.com/v1/tracks/0XMgDXVvDen04Rl0iB1YNr");
		response.prettyPrint();
		int statusCode = response.getStatusCode();
		System.out.println("Status code: " + statusCode);
		Assert.assertEquals(statusCode, 200);

	}
	
	
	

}
